{"version":3,"sources":["data/messages.js","Message.js","Response.js","Typing.js","MessageHistory.js","App.js","reportWebVitals.js","index.js"],"names":["messages","id","from","name","type","time","text","Message","message","className","Response","Typing","MessageHistory","list","length","map","defaultProps","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7b082c08.chunk.js","sourcesContent":["const messages = [{\n  id: 'chat-5-1090',\n  from: { name: 'Ольга' },\n  type: 'response',\n  time: '10:10',\n  text: 'Привет, Виктор. Как дела? Как идет работа над проектом?',\n}, {\n  id: 'chat-5-1091',\n  from: { name: 'Виктор' },\n  type: 'message',\n  time: '10:12',\n  text: 'Привет. Давай сегодня созвонимся. Проект практически готов, и у меня есть что показать.',\n}, {\n  id: 'chat-5-1092',\n  from: { name: 'Ольга' },\n  type: 'response',\n  time: '10:14',\n  text: 'Не уверена что сегодня получится. Не все еще в офисе. Давай уточню через час. Возникли ли какие-либо проблемы на последней стадии проекта?',\n}, {\n  id: 'chat-5-1093',\n  from: { name: 'Виктор' },\n  type: 'message',\n  time: '10:20',\n  text: 'Нет, все прошло гладко. Очень хочу показать всё команде.',\n}, {\n  id: 'chat-5-1094',\n  from: { name: 'Виктор' },\n  type: 'typing',\n  time: '10:31',\n}];\n\nexport default messages;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Message({ from, message }) {\n  const { name } = from;\n  const { time, text } = message;\n\n  return (\n    <li>\n      <div className=\"message-data\">\n        <span className=\"message-data-name\">\n          <b className=\"fa online\">⦁</b>\n          {name}\n        </span>\n        <span className=\"message-data-time\">{time}</span>\n      </div>\n      <div className=\"message my-message\">{text || ''}</div>\n    </li>\n  );\n}\n\nMessage.propTypes = {\n  from: PropTypes.shape({\n    name: PropTypes.string,\n  }).isRequired,\n  message: PropTypes.shape({\n    time: PropTypes.string,\n    text: PropTypes.string,\n  }).isRequired,\n};\n\nexport default Message;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Response({ from, message }) {\n  const { name } = from;\n  const { time, text } = message;\n\n  return (\n    <li className=\"clearfix\">\n      <div className=\"message-data align-right\">\n        <span className=\"message-data-time\">{time}</span>\n        &nbsp; &nbsp;\n        <span className=\"message-data-name\">{name}</span>\n        <b className=\"fa me online\">⦁</b>\n      </div>\n      <div className=\"message other-message float-right\">{text}</div>\n    </li>\n  );\n}\n\nResponse.propTypes = {\n  from: PropTypes.shape({\n    name: PropTypes.string,\n  }).isRequired,\n  message: PropTypes.shape({\n    time: PropTypes.string,\n    text: PropTypes.string,\n  }).isRequired,\n};\n\nexport default Response;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Typing({ from, message }) {\n  const { name } = from;\n  const { time } = message;\n\n  return (\n    <li>\n      <div className=\"message-data\">\n        <span className=\"message-data-name\">\n          <b className=\"fa fa-circle online\">⦁</b>\n          {name}\n        </span>\n        <span className=\"message-data-time\">{time}</span>\n        <div className=\"typing-container\">\n          <b className=\"fa-circle fa-100\">⦁</b>\n          <b className=\"fa-circle fa-50\">⦁</b>\n          <b className=\"fa-circle fa-25\">⦁</b>\n        </div>\n      </div>\n    </li>\n  );\n}\n\nTyping.propTypes = {\n  from: PropTypes.shape({\n    name: PropTypes.string,\n  }).isRequired,\n  message: PropTypes.shape({\n    time: PropTypes.string,\n  }).isRequired,\n};\n\nexport default Typing;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Message from './Message';\nimport Response from './Response';\nimport Typing from './Typing';\n\nfunction MessageHistory({ list }) {\n  return !!list.length && (\n    <ul>\n      {\n        list.map(({\n          id, type, from, time, text,\n        }) => {\n          switch (type) {\n            case 'message':\n              return <Message from={from} message={{ time, text }} key={id} />;\n            case 'response':\n              return <Response from={from} message={{ time, text }} key={id} />;\n            default:\n              return <Typing from={from} message={{ time }} key={id} />;\n          }\n        })\n      }\n    </ul>\n  );\n}\n\nMessageHistory.defaultProps = {\n  list: [],\n};\n\nMessageHistory.propTypes = {\n  list: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.oneOf(['response', 'message', 'typing']),\n    }),\n  ),\n};\n\nexport default MessageHistory;\n","import React from 'react';\nimport './App.css';\nimport messages from './data/messages';\nimport MessageHistory from './MessageHistory';\n\nfunction App() {\n  return (\n    <div className=\"clearfix container\">\n      <div className=\"chat\">\n        <div className=\"chat-history\">\n          <MessageHistory list={messages} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}